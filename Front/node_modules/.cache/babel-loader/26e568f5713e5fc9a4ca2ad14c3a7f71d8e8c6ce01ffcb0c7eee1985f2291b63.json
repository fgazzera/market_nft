{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tomi\\\\Desktop\\\\market_nft\\\\Front\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport logo from '../logo_3.png';\nimport fullLogo from '../full_logo.png';\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [connected, toggleConnect] = useState(false);\n  const location = useLocation();\n  const [currAddress, updateAddress] = useState('0x');\n  async function getAddress() {\n    const ethers = require(\"ethers\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress();\n    updateAddress(addr);\n  }\n  function updateButton() {\n    const ethereumButton = document.querySelector('.enableEthereumButton');\n    ethereumButton.textContent = \"Connected\";\n    ethereumButton.classList.remove(\"hover:bg-blue-70\");\n    ethereumButton.classList.remove(\"bg-blue-500\");\n    ethereumButton.classList.add(\"hover:bg-green-70\");\n    ethereumButton.classList.add(\"bg-green-500\");\n  }\n  async function connectWebsite() {\n    const chainId = await window.ethereum.request({\n      method: 'eth_chainId'\n    });\n    if (chainId !== '0x11155111') {\n      // Ensure Sepolia Chain ID\n      alert('Incorrect network! Please switch to the Sepolia network in Metamask.');\n      return;\n    }\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }).then(() => {\n      updateButton();\n      getAddress();\n      window.location.replace(location.pathname);\n    });\n  }\n  useEffect(() => {\n    if (window.ethereum === undefined) return;\n    let val = window.ethereum.isConnected();\n    if (val) {\n      getAddress();\n      toggleConnect(val);\n      updateButton();\n    }\n    window.ethereum.on('accountsChanged', function (accounts) {\n      window.location.replace(location.pathname);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"w-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"flex items-end justify-between py-3 bg-transparent text-white pr-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-end ml-5 pb-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: fullLogo,\n              alt: \"\",\n              width: 120,\n              height: 120,\n              className: \"inline-block -mt-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-block font-bold text-xl ml-2\",\n              children: \"NFT Marketplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"w-2/6\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"lg:flex justify-between font-bold mr-10 text-lg\",\n            children: [location.pathname === \"/\" ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"border-b-2 hover:pb-0 p-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"Marketplace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"hover:border-b-2 hover:pb-0 p-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"Marketplace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), location.pathname === \"/sellNFT\" ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"border-b-2 hover:pb-0 p-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/sellNFT\",\n                children: \"List My NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"hover:border-b-2 hover:pb-0 p-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/sellNFT\",\n                children: \"List My NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), location.pathname === \"/profile\" ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"border-b-2 hover:pb-0 p-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/profile\",\n                children: \"Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"hover:border-b-2 hover:pb-0 p-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/profile\",\n                children: \"Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\",\n                onClick: connectWebsite,\n                children: connected ? \"Connected\" : \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white text-bold text-right mr-10 text-sm\",\n      children: [currAddress !== \"0x\" ? \"Connected to\" : \"Not Connected. Please login to view NFTs\", \" \", currAddress !== \"0x\" ? currAddress.substring(0, 15) + '...' : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"76Z9DE+dWn7dGxvF/4tUTdrRkik=\", false, function () {\n  return [useLocation];\n});\n_c = Navbar;\nexport default Navbar;\n\n/*import logo from '../logo_3.png';\r\nimport fullLogo from '../full_logo.png';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nfunction Navbar() {\r\n  const [connected, toggleConnect] = useState(false);\r\n  const location = useLocation();\r\n  const [currAddress, updateAddress] = useState('0x');\r\n\r\n  async function getAddress() {\r\n    const ethers = require(\"ethers\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n    updateAddress(addr);\r\n  }\r\n\r\n  function updateButton() {\r\n    const ethereumButton = document.querySelector('.enableEthereumButton');\r\n    ethereumButton.textContent = \"Connected\";\r\n    ethereumButton.classList.remove(\"hover:bg-blue-70\");\r\n    ethereumButton.classList.remove(\"bg-blue-500\");\r\n    ethereumButton.classList.add(\"hover:bg-green-70\");\r\n    ethereumButton.classList.add(\"bg-green-500\");\r\n  }\r\n\r\n  async function connectWebsite() {\r\n    if (window.ethereum === undefined) {\r\n      alert(\"MetaMask is not installed. Please install MetaMask.\");\r\n      return;\r\n    }\r\n  \r\n    // Comprueba si el usuario está conectado a MetaMask\r\n    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\r\n  \r\n    if (accounts.length === 0) {\r\n      // El usuario no está conectado, solicita la conexión\r\n      try {\r\n        const addresses = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        const userAddress = addresses[0]; // Obtiene la primera dirección\r\n        alert(\"Connected to MetaMask with address: \" + userAddress);\r\n        // Puedes realizar otras acciones aquí después de la conexión exitosa\r\n        updateAddress(userAddress); // Actualiza la dirección del usuario\r\n        toggleConnect(true); // Marca como conectado\r\n        updateButton(); // Actualiza el botón\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert(\"Failed to connect to MetaMask. Please try again.\");\r\n      }\r\n    } else {\r\n      // El usuario ya está conectado, muestra la dirección actual\r\n      const userAddress = accounts[0]; // Obtiene la primera dirección\r\n      updateAddress(userAddress); // Actualiza la dirección del usuario\r\n      toggleConnect(true); // Marca como conectado\r\n      updateButton(); // Actualiza el botón\r\n    }\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    if(window.ethereum == undefined)\r\n      return;\r\n    let val = window.ethereum.isConnected();\r\n    if(val)\r\n    {\r\n      console.log(\"here\");\r\n      getAddress();\r\n      toggleConnect(val);\r\n      updateButton();\r\n    }\r\n\r\n    window.ethereum.on('accountsChanged', function(accounts){\r\n      window.location.replace(location.pathname)\r\n    })\r\n  });\r\n\r\n  async function connectWebsite() {\r\n    if (window.ethereum === undefined) {\r\n      alert(\"MetaMask is not installed. Please install MetaMask.\");\r\n      return;\r\n    }\r\n  \r\n    // Comprueba si el usuario está conectado a MetaMask\r\n    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\r\n  \r\n    if (accounts.length === 0) {\r\n      // El usuario no está conectado, solicita la conexión\r\n      try {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        alert(\"Connected to MetaMask!\");\r\n        // Puedes realizar otras acciones aquí después de la conexión exitosa\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert(\"Failed to connect to MetaMask. Please try again.\");\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"\">\r\n      <nav className=\"w-screen\">\r\n        <ul className='flex items-end justify-between py-3 bg-transparent text-white pr-5'>\r\n          <li className='flex items-end ml-5 pb-2'>\r\n            <Link to=\"/\">\r\n              {/* ... (contenido del logo) *}\r\n            </Link>\r\n          </li>\r\n          <li className='w-2/6'>\r\n            <ul className='lg:flex justify-between font-bold mr-10 text-lg'>\r\n              {/* ... (enlaces y botones del Navbar) *}\r\n              <li>\r\n                <button\r\n                  className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\"\r\n                  onClick={connectWebsite} // Asocia la función al evento onClick del botón\r\n                >\r\n                  {connected ? \"Connected\" : \"Connect Wallet\"}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className='text-white text-bold text-right mr-10 text-sm'>\r\n        {currAddress !== \"0x\" ? \"Connected to\" : \"Not Connected. Please login to view NFTs\"} {currAddress !== \"0x\" ? (currAddress.substring(0, 15) + '...') : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;*/\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["logo","fullLogo","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","useParams","React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Navbar","_s","connected","toggleConnect","location","currAddress","updateAddress","getAddress","ethers","require","provider","providers","Web3Provider","window","ethereum","signer","getSigner","addr","updateButton","ethereumButton","document","querySelector","textContent","classList","remove","add","connectWebsite","chainId","request","method","alert","then","replace","pathname","undefined","val","isConnected","on","accounts","className","children","to","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","substring","_c","$RefreshReg$"],"sources":["C:/Users/Tomi/Desktop/market_nft/Front/src/components/Navbar.js"],"sourcesContent":["import logo from '../logo_3.png';\r\nimport fullLogo from '../full_logo.png';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nfunction Navbar() {\r\n  const [connected, toggleConnect] = useState(false);\r\n  const location = useLocation();\r\n  const [currAddress, updateAddress] = useState('0x');\r\n\r\n  async function getAddress() {\r\n    const ethers = require(\"ethers\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n    updateAddress(addr);\r\n  }\r\n\r\n  function updateButton() {\r\n    const ethereumButton = document.querySelector('.enableEthereumButton');\r\n    ethereumButton.textContent = \"Connected\";\r\n    ethereumButton.classList.remove(\"hover:bg-blue-70\");\r\n    ethereumButton.classList.remove(\"bg-blue-500\");\r\n    ethereumButton.classList.add(\"hover:bg-green-70\");\r\n    ethereumButton.classList.add(\"bg-green-500\");\r\n  }\r\n\r\n  async function connectWebsite() {\r\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n\r\n    if (chainId !== '0x11155111') { // Ensure Sepolia Chain ID\r\n      alert('Incorrect network! Please switch to the Sepolia network in Metamask.');\r\n\r\n      return;\r\n    }\r\n\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n      .then(() => {\r\n        updateButton();\r\n        getAddress();\r\n        window.location.replace(location.pathname);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum === undefined) return;\r\n    let val = window.ethereum.isConnected();\r\n    if (val) {\r\n      getAddress();\r\n      toggleConnect(val);\r\n      updateButton();\r\n    }\r\n\r\n    window.ethereum.on('accountsChanged', function (accounts) {\r\n      window.location.replace(location.pathname);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <nav className=\"w-screen\">\r\n        <ul className='flex items-end justify-between py-3 bg-transparent text-white pr-5'>\r\n          <li className='flex items-end ml-5 pb-2'>\r\n            <Link to=\"/\">\r\n              <img src={fullLogo} alt=\"\" width={120} height={120} className=\"inline-block -mt-2\" />\r\n              <div className='inline-block font-bold text-xl ml-2'>\r\n                NFT Marketplace\r\n              </div>\r\n            </Link>\r\n          </li>\r\n          <li className='w-2/6'>\r\n            <ul className='lg:flex justify-between font-bold mr-10 text-lg'>\r\n              {location.pathname === \"/\" ?\r\n                <li className='border-b-2 hover:pb-0 p-2'>\r\n                  <Link to=\"/\">Marketplace</Link>\r\n                </li>\r\n                :\r\n                <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                  <Link to=\"/\">Marketplace</Link>\r\n                </li>\r\n              }\r\n              {location.pathname === \"/sellNFT\" ?\r\n                <li className='border-b-2 hover:pb-0 p-2'>\r\n                  <Link to=\"/sellNFT\">List My NFT</Link>\r\n                </li>\r\n                :\r\n                <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                  <Link to=\"/sellNFT\">List My NFT</Link>\r\n                </li>\r\n              }\r\n              {location.pathname === \"/profile\" ?\r\n                <li className='border-b-2 hover:pb-0 p-2'>\r\n                  <Link to=\"/profile\">Profile</Link>\r\n                </li>\r\n                :\r\n                <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                  <Link to=\"/profile\">Profile</Link>\r\n                </li>\r\n              }\r\n              <li>\r\n                <button\r\n                  className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\"\r\n                  onClick={connectWebsite}\r\n                >\r\n                  {connected ? \"Connected\" : \"Connect Wallet\"}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className='text-white text-bold text-right mr-10 text-sm'>\r\n        {currAddress !== \"0x\" ? \"Connected to\" : \"Not Connected. Please login to view NFTs\"} {currAddress !== \"0x\" ? (currAddress.substring(0, 15) + '...') : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n  \r\n/*import logo from '../logo_3.png';\r\nimport fullLogo from '../full_logo.png';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nfunction Navbar() {\r\n  const [connected, toggleConnect] = useState(false);\r\n  const location = useLocation();\r\n  const [currAddress, updateAddress] = useState('0x');\r\n\r\n  async function getAddress() {\r\n    const ethers = require(\"ethers\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n    updateAddress(addr);\r\n  }\r\n\r\n  function updateButton() {\r\n    const ethereumButton = document.querySelector('.enableEthereumButton');\r\n    ethereumButton.textContent = \"Connected\";\r\n    ethereumButton.classList.remove(\"hover:bg-blue-70\");\r\n    ethereumButton.classList.remove(\"bg-blue-500\");\r\n    ethereumButton.classList.add(\"hover:bg-green-70\");\r\n    ethereumButton.classList.add(\"bg-green-500\");\r\n  }\r\n\r\n  async function connectWebsite() {\r\n    if (window.ethereum === undefined) {\r\n      alert(\"MetaMask is not installed. Please install MetaMask.\");\r\n      return;\r\n    }\r\n  \r\n    // Comprueba si el usuario está conectado a MetaMask\r\n    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\r\n  \r\n    if (accounts.length === 0) {\r\n      // El usuario no está conectado, solicita la conexión\r\n      try {\r\n        const addresses = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        const userAddress = addresses[0]; // Obtiene la primera dirección\r\n        alert(\"Connected to MetaMask with address: \" + userAddress);\r\n        // Puedes realizar otras acciones aquí después de la conexión exitosa\r\n        updateAddress(userAddress); // Actualiza la dirección del usuario\r\n        toggleConnect(true); // Marca como conectado\r\n        updateButton(); // Actualiza el botón\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert(\"Failed to connect to MetaMask. Please try again.\");\r\n      }\r\n    } else {\r\n      // El usuario ya está conectado, muestra la dirección actual\r\n      const userAddress = accounts[0]; // Obtiene la primera dirección\r\n      updateAddress(userAddress); // Actualiza la dirección del usuario\r\n      toggleConnect(true); // Marca como conectado\r\n      updateButton(); // Actualiza el botón\r\n    }\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    if(window.ethereum == undefined)\r\n      return;\r\n    let val = window.ethereum.isConnected();\r\n    if(val)\r\n    {\r\n      console.log(\"here\");\r\n      getAddress();\r\n      toggleConnect(val);\r\n      updateButton();\r\n    }\r\n\r\n    window.ethereum.on('accountsChanged', function(accounts){\r\n      window.location.replace(location.pathname)\r\n    })\r\n  });\r\n\r\n  async function connectWebsite() {\r\n    if (window.ethereum === undefined) {\r\n      alert(\"MetaMask is not installed. Please install MetaMask.\");\r\n      return;\r\n    }\r\n  \r\n    // Comprueba si el usuario está conectado a MetaMask\r\n    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\r\n  \r\n    if (accounts.length === 0) {\r\n      // El usuario no está conectado, solicita la conexión\r\n      try {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        alert(\"Connected to MetaMask!\");\r\n        // Puedes realizar otras acciones aquí después de la conexión exitosa\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert(\"Failed to connect to MetaMask. Please try again.\");\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"\">\r\n      <nav className=\"w-screen\">\r\n        <ul className='flex items-end justify-between py-3 bg-transparent text-white pr-5'>\r\n          <li className='flex items-end ml-5 pb-2'>\r\n            <Link to=\"/\">\r\n              {/* ... (contenido del logo) *}\r\n            </Link>\r\n          </li>\r\n          <li className='w-2/6'>\r\n            <ul className='lg:flex justify-between font-bold mr-10 text-lg'>\r\n              {/* ... (enlaces y botones del Navbar) *}\r\n              <li>\r\n                <button\r\n                  className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\"\r\n                  onClick={connectWebsite} // Asocia la función al evento onClick del botón\r\n                >\r\n                  {connected ? \"Connected\" : \"Connect Wallet\"}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className='text-white text-bold text-right mr-10 text-sm'>\r\n        {currAddress !== \"0x\" ? \"Connected to\" : \"Not Connected. Please login to view NFTs\"} {currAddress !== \"0x\" ? (currAddress.substring(0, 15) + '...') : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}