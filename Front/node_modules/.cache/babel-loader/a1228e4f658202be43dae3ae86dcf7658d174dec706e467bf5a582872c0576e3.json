{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tomi\\\\Desktop\\\\market_nft\\\\Front\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const [data, updateData] = useState([]);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n  const [dataFetched, updateFetched] = useState(false);\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    let sumPrice = 0;\n\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n\n    //create an NFT Token\n    let transaction = await contract.getMyNFTs();\n\n    /*\r\n    * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\r\n    * and creates an object of information that is to be displayed\r\n    */\n\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      sumPrice += Number(price);\n      return item;\n    }));\n    updateData(items);\n    updateFetched(true);\n    updateAddress(addr);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileClass\",\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-center flex-col mt-11 md:text-2xl text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"No. of NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Total Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), totalPrice, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col text-center items-center mt-11 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold\",\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center flex-wrap max-w-screen-xl\",\n          children: data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(NFTTile, {\n              data: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 text-xl\",\n          children: data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"5R3AdJKQiPSIkEGwWNaYIEoBvOE=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\n;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Navbar","useLocation","useParams","MarketplaceJSON","axios","useState","NFTTile","jsxDEV","_jsxDEV","Profile","_s","data","updateData","address","updateAddress","totalPrice","updateTotalPrice","dataFetched","updateFetched","getNFTData","tokenId","ethers","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","abi","transaction","getMyNFTs","items","Promise","all","map","i","tokenURI","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","Number","addr","toPrecision","params","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","length","value","index","_c","$RefreshReg$"],"sources":["C:/Users/Tomi/Desktop/market_nft/Front/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\nexport default function Profile () {\r\n    const [data, updateData] = useState([]);\r\n    const [address, updateAddress] = useState(\"0x\");\r\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n    const [dataFetched, updateFetched] = useState(false);\r\n\r\n    async function getNFTData(tokenId) {\r\n        const ethers = require(\"ethers\");\r\n        let sumPrice = 0;\r\n\r\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n\r\n        //Pull the deployed contract instance\r\n        let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\r\n\r\n        //create an NFT Token\r\n        let transaction = await contract.getMyNFTs()\r\n\r\n        /*\r\n        * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\r\n        * and creates an object of information that is to be displayed\r\n        */\r\n        \r\n        const items = await Promise.all(transaction.map(async i => {\r\n            const tokenURI = await contract.tokenURI(i.tokenId);\r\n            let meta = await axios.get(tokenURI);\r\n            meta = meta.data;\r\n\r\n            let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\r\n            let item = {\r\n                price,\r\n                tokenId: i.tokenId.toNumber(),\r\n                seller: i.seller,\r\n                owner: i.owner,\r\n                image: meta.image,\r\n                name: meta.name,\r\n                description: meta.description,\r\n            }\r\n            sumPrice += Number(price);\r\n            return item;\r\n        }))\r\n\r\n        updateData(items);\r\n        updateFetched(true);\r\n        updateAddress(addr);\r\n        updateTotalPrice(sumPrice.toPrecision(3));\r\n    }\r\n\r\n    const params = useParams();\r\n    const tokenId = params.tokenId;\r\n    \r\n    if(!dataFetched) getNFTData(tokenId);\r\n    \r\n    return (\r\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\r\n            <Navbar></Navbar>\r\n            <div className=\"profileClass\">\r\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\r\n                <div className=\"mb-5\">\r\n                    <h2 className=\"font-bold\">Wallet Address</h2>  \r\n                    {address}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\r\n                    <div>\r\n                        <h2 className=\"font-bold\">No. of NFTs</h2>\r\n                        {data.length}\r\n                    </div>\r\n                    <div className=\"ml-20\">\r\n                        <h2 className=\"font-bold\">Total Value</h2>\r\n                        {totalPrice} ETH\r\n                    </div>\r\n            </div>\r\n            <div className=\"flex flex-col text-center items-center mt-11 text-white\">\r\n                <h2 className=\"font-bold\">Your NFTs</h2>\r\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\r\n                    {data.map((value, index) => {\r\n                    return <NFTTile data={value} key={index}></NFTTile>;\r\n                    })}\r\n                </div>\r\n                <div className=\"mt-10 text-xl\">\r\n                    {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\":\"\"}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}