{"ast":null,"code":"// metamask.js\n\n// Función para verificar si MetaMask está instalado y habilitado\nasync function checkMetaMask() {\n  if (typeof window.ethereum !== 'undefined') {\n    await window.ethereum.enable();\n    return true;\n  }\n  return false;\n}\n\n// Función para conectar MetaMask\nasync function connectToMetaMask() {\n  const isMetaMaskInstalled = await checkMetaMask();\n  if (isMetaMaskInstalled) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    const accountAddress = accounts[0];\n    return accountAddress;\n  } else {\n    return null;\n  }\n}\n\n// Función para desconectar de MetaMask\nasync function disconnectFromMetaMask() {\n  await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n}\nexport { checkMetaMask, connectToMetaMask, disconnectFromMetaMask };","map":{"version":3,"names":["checkMetaMask","window","ethereum","enable","connectToMetaMask","isMetaMaskInstalled","accounts","request","method","accountAddress","disconnectFromMetaMask"],"sources":["C:/Users/Tomi/Desktop/market_nft/Front/src/components/User.js"],"sourcesContent":["// metamask.js\r\n\r\n// Función para verificar si MetaMask está instalado y habilitado\r\nasync function checkMetaMask() {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n        await window.ethereum.enable();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// Función para conectar MetaMask\r\nasync function connectToMetaMask() {\r\n    const isMetaMaskInstalled = await checkMetaMask();\r\n\r\n    if (isMetaMaskInstalled) {\r\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        const accountAddress = accounts[0];\r\n        return accountAddress;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n// Función para desconectar de MetaMask\r\nasync function disconnectFromMetaMask() {\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n}\r\n\r\nexport { checkMetaMask, connectToMetaMask, disconnectFromMetaMask };\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA,eAAeA,aAAaA,CAAA,EAAG;EAC3B,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxC,MAAMD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC9B,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB;;AAEA;AACA,eAAeC,iBAAiBA,CAAA,EAAG;EAC/B,MAAMC,mBAAmB,GAAG,MAAML,aAAa,CAAC,CAAC;EAEjD,IAAIK,mBAAmB,EAAE;IACrB,MAAMC,QAAQ,GAAG,MAAML,MAAM,CAACC,QAAQ,CAACK,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC;IACjF,MAAMC,cAAc,GAAGH,QAAQ,CAAC,CAAC,CAAC;IAClC,OAAOG,cAAc;EACzB,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ;;AAEA;AACA,eAAeC,sBAAsBA,CAAA,EAAG;EACpC,MAAMT,MAAM,CAACC,QAAQ,CAACK,OAAO,CAAC;IAAEC,MAAM,EAAE;EAAsB,CAAC,CAAC;AACpE;AAEA,SAASR,aAAa,EAAEI,iBAAiB,EAAEM,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}